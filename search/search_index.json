{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Docker Foundations Hands-On Quote \" Docker is a set of platform as a service products that use OS-level virtualization to deliver software in packages called containers. Containers are isolated from one another and bundle their own software, libraries and configuration files; they can communicate with each other through well-defined channels. \" ~ wikipedia Overview This Hands-On walk-through is designed to provide you real-world exposure to the foundational Docker instructions to build a Docker image and integrate it with Visual Studio Code. Here are some additional resources available: WWT Programmability Foundations Lab \u2014 Docker Section What You Need A Windows or macOS computer with Docker Desktop . If you are new to Docker, here is the Docker Desktop Installation Documentation . Alternatively, you can install Docker in a Linux Environment and complete the walkthrough. Visual Studio Code ( download )","title":"Home"},{"location":"#docker-foundations-hands-on","text":"Quote \" Docker is a set of platform as a service products that use OS-level virtualization to deliver software in packages called containers. Containers are isolated from one another and bundle their own software, libraries and configuration files; they can communicate with each other through well-defined channels. \" ~ wikipedia","title":"Docker Foundations Hands-On"},{"location":"#overview","text":"This Hands-On walk-through is designed to provide you real-world exposure to the foundational Docker instructions to build a Docker image and integrate it with Visual Studio Code. Here are some additional resources available: WWT Programmability Foundations Lab \u2014 Docker Section","title":"Overview"},{"location":"#what-you-need","text":"A Windows or macOS computer with Docker Desktop . If you are new to Docker, here is the Docker Desktop Installation Documentation . Alternatively, you can install Docker in a Linux Environment and complete the walkthrough. Visual Studio Code ( download )","title":"What You Need"},{"location":"sections/section_1/","text":"\u200b Visual Studio Code The prerequisites indicated that you would need to have Visual Studio Code installed on your local machine for these exercises. Visual Studio Code supports enhanced features via Extensions that can be installed from the Extensions Marketplace. The Extensions Marketplace can be found by clicking the on the left side of your Visual Studio Code window. Docker Extension The first extension to add is the Docker extension. This will provide capabilities like syntax highlighting in Dockerfiles, autocompletion of instructions, and much more. OPEN Visual Studio Code CLICK the Extensions Icon on the left ENTER ms-azuretools.vscode-docker in the Search Extensions in Marketplace box SELECT Install Remote Development Extension This section will illustrate the additional Visual Studio Code Extension needed to integrate it with Docker. CLICK in the Search Extensions in Marketplace box ENTER ms-vscode-remote.vscode-remote-extensionpack in the Search Extensions in Marketplace box SELECT Install Note Reload the window if prompted. The Extension details will indicate that the extension is installed and enabled as seen below.","title":"Visual Studio Code"},{"location":"sections/section_1/#visual-studio-code","text":"The prerequisites indicated that you would need to have Visual Studio Code installed on your local machine for these exercises. Visual Studio Code supports enhanced features via Extensions that can be installed from the Extensions Marketplace. The Extensions Marketplace can be found by clicking the on the left side of your Visual Studio Code window.","title":"\u200b Visual Studio Code"},{"location":"sections/section_1/#docker-extension","text":"The first extension to add is the Docker extension. This will provide capabilities like syntax highlighting in Dockerfiles, autocompletion of instructions, and much more. OPEN Visual Studio Code CLICK the Extensions Icon on the left ENTER ms-azuretools.vscode-docker in the Search Extensions in Marketplace box SELECT Install","title":"Docker Extension"},{"location":"sections/section_1/#remote-development-extension","text":"This section will illustrate the additional Visual Studio Code Extension needed to integrate it with Docker. CLICK in the Search Extensions in Marketplace box ENTER ms-vscode-remote.vscode-remote-extensionpack in the Search Extensions in Marketplace box SELECT Install Note Reload the window if prompted. The Extension details will indicate that the extension is installed and enabled as seen below.","title":"Remote Development Extension"},{"location":"sections/section_2/","text":"Create and Open a New Project This section will guide you through creating a new repository on GitHub and opening that new repository in Visual Studio Code. Create a Repo on GitHub All of your development projects should start with creating a repository to store you hard work in a safe place. NAVIGATE to GitHub CLICK the New button next to Repositories NAME the repo docker-foundations-lab SET the repo to Private CLICK Add a README file CLICK Add .gitignore and SELECT Python CLICK Choose a license and SELECT Apache License 2.0 CLICK Create Repository Now that you have created your new repository on GitHub you can move forward with opening this new project in Visual Studio Code. Opening Your Repo in Visual Studio Code There are two ways to approach this step: Manually clone the repo from the terminal Use the functionality built into Visual Studio Code Manually Clone Method OPEN a new Terminal NAVIGATE to your repo on GitHub CLICK the Code button SELECT the transport (HTTPS or SSH) CLICK the Copy icon \u200b PASTE git clone plus that string into your Terminal Example SSH git clone git@github.com:jandiorio/docker-foundations-lab.git HTTPS git clone https://github.com/jandiorio/docker-foundations-lab.git Important The command above will clone down the repository creating a subfolder with the name of the repo in the folder where you ran the command. OPEN the new Folder in Visual Studio Code using Open Folder Clone and Open Directly in Visual Studio Code OPEN a new Visual Studio Code Window CLICK the Explorer icon CLICK Clone Repository PASTE repository string SELECT the parent directory Tip I have a folder named development where all of my development projects are located. CLICK Open in the dialog prompt to Open the Repository","title":"Start a New Project"},{"location":"sections/section_2/#create-and-open-a-new-project","text":"This section will guide you through creating a new repository on GitHub and opening that new repository in Visual Studio Code.","title":"Create and Open a New Project"},{"location":"sections/section_2/#create-a-repo-on-github","text":"All of your development projects should start with creating a repository to store you hard work in a safe place. NAVIGATE to GitHub CLICK the New button next to Repositories NAME the repo docker-foundations-lab SET the repo to Private CLICK Add a README file CLICK Add .gitignore and SELECT Python CLICK Choose a license and SELECT Apache License 2.0 CLICK Create Repository Now that you have created your new repository on GitHub you can move forward with opening this new project in Visual Studio Code.","title":"Create a Repo on GitHub"},{"location":"sections/section_2/#opening-your-repo-in-visual-studio-code","text":"There are two ways to approach this step: Manually clone the repo from the terminal Use the functionality built into Visual Studio Code","title":"Opening Your Repo in Visual Studio Code"},{"location":"sections/section_2/#manually-clone-method","text":"OPEN a new Terminal NAVIGATE to your repo on GitHub CLICK the Code button SELECT the transport (HTTPS or SSH) CLICK the Copy icon \u200b PASTE git clone plus that string into your Terminal Example SSH git clone git@github.com:jandiorio/docker-foundations-lab.git HTTPS git clone https://github.com/jandiorio/docker-foundations-lab.git Important The command above will clone down the repository creating a subfolder with the name of the repo in the folder where you ran the command. OPEN the new Folder in Visual Studio Code using Open Folder","title":"Manually Clone Method"},{"location":"sections/section_2/#clone-and-open-directly-in-visual-studio-code","text":"OPEN a new Visual Studio Code Window CLICK the Explorer icon CLICK Clone Repository PASTE repository string SELECT the parent directory Tip I have a folder named development where all of my development projects are located. CLICK Open in the dialog prompt to Open the Repository","title":"Clone and Open Directly in Visual Studio Code"},{"location":"sections/section_3/","text":"Build a Dockerfile Selecting a Base Image Installing OS Requirements Installing Python Requirements Create a Working Directory Copy Files","title":"Build a `Dockerfile`"},{"location":"sections/section_3/#build-a-dockerfile","text":"","title":"Build a Dockerfile"},{"location":"sections/section_3/#selecting-a-base-image","text":"","title":"Selecting a Base Image"},{"location":"sections/section_3/#installing-os-requirements","text":"","title":"Installing OS Requirements"},{"location":"sections/section_3/#installing-python-requirements","text":"","title":"Installing Python Requirements"},{"location":"sections/section_3/#create-a-working-directory","text":"","title":"Create a Working Directory"},{"location":"sections/section_3/#copy-files","text":"","title":"Copy Files"},{"location":"sections/section_4/","text":"Create a .devcontainer.json Config File","title":"Section 4"},{"location":"sections/section_4/#create-a-devcontainerjson-config-file","text":"","title":"Create a .devcontainer.json Config File"},{"location":"sections/section_5/","text":"","title":"Create a Dockerfile"},{"location":"sections/section_6/","text":"","title":"Create Devcontainer Configuration"},{"location":"sections/section_7/","text":"","title":"Reopen Your Project"},{"location":"sections/section_8/","text":"Going Further Adding Extensions Debugging","title":"Why?"},{"location":"sections/section_8/#going-further","text":"","title":"Going Further"},{"location":"sections/section_8/#adding-extensions","text":"","title":"Adding Extensions"},{"location":"sections/section_8/#debugging","text":"","title":"Debugging"},{"location":"sections/section_9/","text":"References","title":"References"},{"location":"sections/section_9/#references","text":"","title":"References"}]}